<plugin>
  <description></description>
  <groupId>com.site.maven.plugins</groupId>
  <artifactId>maven-misc-plugin</artifactId>
  <version>1.0.0</version>
  <goalPrefix>misc</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>create-classpath</goal>
      <description>Create the compile classpath and put it to the maven properties for other
plugins(such as java2wsdl) usage.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.site.maven.plugin.misc.CreateClasspathMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>noJar</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>No Jar library is included</description>
        </parameter>
        <parameter>
          <name>propertyName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Property name to which the created classpath will be stored</description>
        </parameter>
      </parameters>
      <configuration>
        <propertyName implementation="java.lang.String" default-value="site.compile.classpath">${propertyName}</propertyName>
        <noJar implementation="boolean" default-value="false"/>
      </configuration>
    </mojo>
    <mojo>
      <goal>default-properties</goal>
      <description>Set default properties for a maven project, suppose to be overriden by system
properties or maven properties defined in pom.xml or profiles.xml.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.site.maven.plugin.misc.DefaultPropertiesMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>dynamicProperties</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Dynamic properties.

Sample configuration here:

&lt;pre&gt;
&amp;lt;dynamicProperties&amp;gt;
&amp;lt;resolve-path property-name=&amp;quot;flex.basedir&amp;quot; from-dir=&amp;quot;${basedir}&amp;quot;&amp;gt;
&amp;lt;contain-file&amp;gt;flex_sdk_2.zip&amp;lt;/contain-file&amp;gt;
&amp;lt;contain-file&amp;gt;flex_sdk_3.zip&amp;lt;/contain-file&amp;gt;
&amp;lt;/resolve-path&amp;gt;
&amp;lt;resolve-localhost property-name=&amp;quot;localhost&amp;quot;/&amp;gt;
&amp;lt;/dynamicProperties&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
        <parameter>
          <name>profile</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Current project</description>
        </parameter>
        <parameter>
          <name>properties</name>
          <type>java.util.Map</type>
          <required>false</required>
          <editable>true</editable>
          <description>Default properties.

Sample configuration here:

&lt;pre&gt;
&amp;lt;properties&amp;gt;
&amp;lt;!-- property(localhost) will be your host name resolved automatically --&amp;gt;
&amp;lt;poolname&amp;gt;${localhost}.site.com&amp;lt;/poolname&amp;gt;
&amp;lt;ws.host&amp;gt;${poolname}&amp;lt;/ws.host&amp;gt;
&amp;lt;ws.port&amp;gt;80&amp;lt;/ws.port&amp;gt;
&amp;lt;!-- Flex SDK 2 &amp;amp; 3 installation directory --&amp;gt;
&amp;lt;flex.sdk2.home&amp;gt;${flex.basedir}/target/flex_sdk_2&amp;lt;/flex.sdk2.home&amp;gt;
&amp;lt;flex.sdk3.home&amp;gt;${flex.basedir}/target/flex_sdk_3&amp;lt;/flex.sdk3.home&amp;gt;
&amp;lt;/properties&amp;gt;
&lt;/pre&gt;</description>
        </parameter>
      </parameters>
      <configuration>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <profile implementation="java.lang.String">${profile}</profile>
      </configuration>
    </mojo>
    <mojo>
      <goal>unzip</goal>
      <description>Unzip a package to a specified location and set property if necessary</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.site.maven.plugin.misc.UnzipMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>outputDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Where the unzipped files will be stored to</description>
        </parameter>
        <parameter>
          <name>overwrite</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Overwrite the existing files or not</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>true</required>
          <editable>false</editable>
          <description>Current project</description>
        </parameter>
        <parameter>
          <name>propertyName</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>Whihc property name will be set if specified. It's optional</description>
        </parameter>
        <parameter>
          <name>verbose</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>Verbose output</description>
        </parameter>
        <parameter>
          <name>zipFile</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Where is the zip file located</description>
        </parameter>
      </parameters>
      <configuration>
        <propertyName implementation="java.lang.String">${propertyName}</propertyName>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <zipFile implementation="java.io.File">${zipFile}</zipFile>
        <verbose implementation="boolean" default-value="false">${verbose}</verbose>
        <overwrite implementation="boolean" default-value="false">${overwrite}</overwrite>
        <outputDirectory implementation="java.io.File">${outputDirectory}</outputDirectory>
      </configuration>
    </mojo>
    <mojo>
      <goal>xdelete</goal>
      <description>Delete all of duplicated files from the target directory if they also exist
in the source directory.

&lt;pre&gt;
Exmaple:
&amp;lt;plugin&amp;gt;
&amp;lt;groupId&amp;gt;com.site.maven.plugins&amp;lt;/groupId&amp;gt;
&amp;lt;artifactId&amp;gt;maven-misc-plugin&amp;lt;/artifactId&amp;gt;
&amp;lt;configuration&amp;gt;
&amp;lt;targetDirectory&amp;gt;path/to/generated/source&amp;lt;/targetDirectory&amp;gt;
&amp;lt;excludes&amp;gt;
&amp;lt;exclude&amp;gt;parkage.name&amp;lt;/exclude&amp;gt;
&amp;lt;exclude&amp;gt;path/to/sub/dir&amp;lt;/exclude&amp;gt;
&amp;lt;/excludes&amp;gt;
&amp;lt;/configuration&amp;gt;
&amp;lt;/plugin&amp;gt;
&lt;/pre&gt;</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <implementation>com.site.maven.plugin.misc.XdeleteMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>deleteEmptyDirectory</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If or not delete empty directory</description>
        </parameter>
        <parameter>
          <name>excludes</name>
          <type>java.util.List</type>
          <required>false</required>
          <editable>true</editable>
          <description>Which directories or files should also be deleted from target directory</description>
        </parameter>
        <parameter>
          <name>sourceDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Source directory to check files with</description>
        </parameter>
        <parameter>
          <name>targetDirectory</name>
          <type>java.io.File</type>
          <required>true</required>
          <editable>true</editable>
          <description>Target directory to delete files from</description>
        </parameter>
      </parameters>
      <configuration>
        <deleteEmptyDirectory implementation="boolean" default-value="true"/>
        <sourceDirectory implementation="java.io.File">${project.build.sourceDirectory}</sourceDirectory>
      </configuration>
    </mojo>
  </mojos>
  <dependencies/>
</plugin>