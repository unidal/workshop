 ------
 Introduction
 ------
 Frankie Wu
 ------
 21 Nov 2007
 ------
 
Maven Flex Plugin: Frequently Asked Questions

* {How to make Flex Compiler work on IBM JDK platform as well as Sun JDK platform?}

  By adding parameter "-Xbootclasspath/p:$\{flex.home\}/lib/xercesImpl.jar". The Flex plugin will automatically add it to make JDK platform independent.
  
* {How to dump Flex config into an XML file?}

  Adding parameter \<dump-config\>my-config.xml\</dump-config\> to \<parameters\> of \<configuration\>. This parameter can work with other parameters specified.
  
  It's useful to dump Flex config into a separate file, especially when you have lot of paraemters such as included-classes or resources to be configured. It can also be used to avoid errors, such as "command line is too long".
  
* {How to load Flex config from an XML file?}

  Adding parameter \<load-config\>my-config.xml\</load-config\> to \<parameters\> of \<configuration\>. This parameter can work with other parameters specified.
  
  If no <load-config> parameter specified, then default config ($\{flex.home\}/frameworks/flex-config.xml) will be used.
  
* {How to build Flex with Flex SDK 2 in the command line?}

  Goto project base directory, type in following command line:
  
+----+
mvn flex:initialize flex:compile -Dflex.classifier=flex2 -Dflex.home=../target/flex_sdk_2 -Dflex.config=your-config.xml
+----+

  <<Notes>>: You need to put all of other configurations in the \<configuration\> of \<plugin\>, otherwise it will NOT be picked up.
  When building Flex, it will change to project base directory first, then do build. So you can specified relative path based on project base directory.
  
* {How to build Flex with Flex SDK 3 in the command line?}

  Goto project base directory, type in following command line:
  
+----+
mvn flex:initialize flex:compile -Dflex.classifier=flex3 -Dflex.home=../target/flex_sdk_3 -Dflex.config=your-config.xml
+----+

  <<Notes>>: You need to put all of other configurations in the \<configuration\> of \<plugin\>, otherwise it will NOT be picked up.
  When building Flex, it will change to project base directory first, then do build. So you can specified relative path based on project base directory.

* {How to build asdoc in the command line?}

  Goto project base directory, type in following command line:
  
+----+
mvn flex:initialize flex:compile -Dflex.classifier=asdoc -Dflex.home=../target/flex_sdk_2 -Dflex.config=your-config.xml
+----+

  <<Notes>>: You need to put all of other configurations in the \<configuration\> of \<plugin\>, otherwise it will NOT be picked up.
  When building Flex, it will change to project base directory first, then do build. So you can specified relative path based on project base directory.
  Either Flex SDK 2 or 3 is okay for build asdoc.
  